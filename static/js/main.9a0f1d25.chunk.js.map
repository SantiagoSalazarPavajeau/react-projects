{"version":3,"sources":["reducers/projects.js","reducers/index.js","reducers/tasks.js","reducers/people.js","components/NavBar.js","components/Sidebar.js","actions/projectActions.js","actions/tasksActions.js","components/projects/CloseModal.js","components/projects/TitleInput.js","components/projects/DescriptionInput.js","components/projects/ProjectInput.js","components/tasks/Task.js","components/tasks/TasksModal.js","components/projects/ProjectCard.js","containers/Projects.js","containers/Tasks.js","components/people/Person.js","containers/People.js","App.js","actions/peopleActions.js","serviceWorker.js","index.js"],"names":["cuid","combineReducers","projects","state","action","type","project","title","newProject","started","description","id","filter","projectIndex","findIndex","slice","data","map","attributes","concat","tasks","console","log","task","newTask","taskIndex","people","person","name","image","avatar","src","NavBar","className","SideBar","to","aria-hidden","URL","editProject","configObj","method","headers","body","JSON","stringify","dispatch","fetch","then","response","json","editedProject","addTask","project_id","person_id","completed","deleteTask","editTask","parseInt","editedTask","CloseModal","props","Form","Button","onClick","closeModal","TitleInput","Input","onChange","event","handleOnChange","value","placeholder","DescriptionInput","TextArea","ProjectInput","showModal","setState","target","handleOnSubmit","preventDefault","saveProject","openModal","renderForm","Modal","dimmer","open","Header","Content","Image","wrapped","size","alt","Description","this","Component","Task","makeCompleted","makeInProgress","handleSave","handleDelete","assignTo","e","ownerIndex","key","innerText","renderInProgress","owner","find","labelPosition","rows","cols","icon","Dropdown","button","floating","labeled","options","renderCompleted","Label","color","Detail","TasksModal","edit","loading","setPercent","projectTasks","percent","numberCompleted","numberInProgress","i","length","startEdit","cancelEdit","saveEdit","renderEdit","onSubmit","renderDescription","Grid","columns","Row","Column","basic","secondary","content","handleHideTasksModal","renderTasks","handleAddTask","renderModal","scrolling","width","status","Divider","horizontal","withRouter","ProjectCard","showTasksModal","handleDeleteClick","handleCancel","handleConfirm","deleteProject","handleShowTasksModal","Confirm","onCancel","onConfirm","Projects","showFormModal","searchTerm","renderProjects","includes","setSearchState","handleSearchProject","stackable","container","connect","Tasks","toString","match","params","Person","list","Card","header","meta","People","renderPeople","addPerson","App","fetchProjects","fetchPeople","fetchTasks","exact","path","render","routerProps","catch","error","message","Boolean","window","location","hostname","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a0f1d25.chunk.js","sourcesContent":["import cuid from 'cuid';\nexport const cuidFn = cuid;\n\n\nexport default function projects(\n    state = []\n    ,\n    action){\n        switch(action.type){\n            case 'ADD_PROJECT':\n                const project = {\n                    title: action.newProject.title,\n                    started: '',\n                    description: action.newProject.description,\n                    id: action.newProject.id\n                }\n                return [...state, project]\n            case 'DELETE_PROJECT':\n                return [...state.filter(project => project.id !== action.id)]\n            case 'EDIT_PROJECT':\n                let projectIndex = state.findIndex(project => project.id === action.project.id) //state is empty if load projects does not include state\n                return [...state.slice(0, projectIndex), action.project, ...state.slice(projectIndex + 1)]\n            case 'LOAD_PROJECTS':\n                // console.log(action.projects.data)\n                let projects = action.projects.data.map(project => project.attributes)\n                // console.log(...state, projects)\n                return [...state.concat(projects)] // this sets state to include the projects. if we only return the projects object, state will be empty on other actions\n            case 'LOADING_PROJECTS':\n                return [...state]\n            default:\n                return state\n        }\n\n}\n\n\n\n\n\n","import { combineReducers } from 'redux'\nimport projects from './projects'\nimport tasks from './tasks'\nimport people from './people'\n\nexport default combineReducers({\n    projects,\n    tasks,\n    people\n})","\n\nexport default function tasks(state = [], action){\n    switch(action.type){\n        case 'ADD_TASK':\n                console.log(action.task)\n                console.log(state)\n                return[...state.concat(action.newTask)]\n            case 'DELETE_TASK':\n                return [...state.filter(task => task.id !== action.id)]\n            case 'EDIT_TASK':\n                let taskIndex = state.findIndex(task => task.id === action.task.id)\n                console.log(action.task)\n                return[...state.slice(0, taskIndex), action.task, ...state.slice(taskIndex + 1)]\n            case 'LOAD_TASKS':\n                const tasks = action.tasks.data.map(task => task.attributes)\n                return [...state.concat(tasks)]\n            default:\n                return state;\n    }\n}\n\n","export default function people(state = [], action){\n    switch(action.type){\n        case 'ADD_PEOPLE':\n                const person = {\n                        name: 'Santi',\n                        id: '1',\n                        image: { avatar: true, src: 'https://api.adorable.io/avatars/70' },\n                }\n                return [...state, person]\n        case 'LOAD_PEOPLE':\n          const people = action.people.data.map(person => person.attributes)\n          return [...state.concat(people)]\n        default:\n            return state\n    }\n}","import React from 'react';\n\nconst NavBar = ()=>{\n        return(\n            <div className=\"ui stackable menu\">\n                <div className=\"header item\">\n                    Projects Dashboard\n                </div>\n                    {/* <Link to=\"/login\" className=\"ui item\">Login</Link>\n                    <Link to=\"/signup\" className=\"ui item\" >Signup</Link>\n                    <Link to=\"/profile\" className=\"ui item\" >Profile</Link>\n                    <Link to=\"/logout\" className=\"ui item right\"> Logout </Link> */}\n\n            </div>\n            \n        )\n}\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../App.css\";\n\n\n// fix import\nconst SideBar = () => {\n        return(\n        <div className=\"sidebar\">\n            <div className=\"ui left vertical inverted icon visible sidebar menu\">\n                <Link to=\"/\" className=\"item\">\n                        <i aria-hidden=\"true\" className=\"home icon\"></i>\n                        Home\n                </Link>\n                <Link to=\"/projects\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"sitemap icon\"></i>\n                        Projects\n                </Link>\n                <Link to=\"/people\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"users icon\"></i>\n                        People\n                </Link>\n            </div>\n        </div>\n        )\n}\n\nexport default SideBar;","const URL ='https://secure-shelf-48338.herokuapp.com/'\n\nexport function fetchProjects(){\n    return (dispatch) => {\n        dispatch({type: 'LOADING_PROJECTS'})\n            fetch(`${URL}/projects`)\n                .then(response => {return response.json()})\n                .then(projects => {\n                    // console.log(projects)\n                    dispatch({type: 'LOAD_PROJECTS', projects}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error.message))\n    }\n}\n\nexport function saveProject(project){\n    const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: project.title,\n            description: project.description\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects`, configObj)\n            .then(response => {return response.json()})\n            .then(project => {\n                // console.log(project)\n                const newProject = project.data.attributes // async response from server adds project\n                dispatch({type: 'ADD_PROJECT', newProject}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}\n\nexport function deleteProject(id){\n    const configObj = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects/${id}`, configObj)\n            .then(response => {return response.json()})\n            .then(() => {\n                dispatch({type: 'DELETE_PROJECT', id}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}\n\nexport function editProject(project){\n    const configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: project.title,\n            description: project.description\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects/${project.id}`, configObj)\n            .then(response => {return response.json()})\n            .then(editedProject => {\n                console.log(editedProject)\n                let project = editedProject.data.attributes\n                dispatch({type: 'EDIT_PROJECT', project}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}","const URL ='https://secure-shelf-48338.herokuapp.com/'\n\nexport function fetchTasks(){\n    return (dispatch) => {\n            fetch(`${URL}/tasks`)\n                .then(response => {return response.json()})\n                .then(tasks => {\n                    // console.log(tasks)\n                    dispatch({type: 'LOAD_TASKS', tasks}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error.message))\n    }\n}\n\nexport function addTask(project_id){\n    \n    const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            description: \"New task...\",\n            project_id: project_id,\n            person_id: 1,  // person_id needed for ActiveRecord to commit task to database\n            completed: false\n        })\n      };\n    console.log('b')\n    return (dispatch) => {\n        console.log('c')\n        fetch(`${URL}/tasks`, configObj)\n            .then(response => {return response.json()})\n            .then(task => {\n                // console.log(project)\n                console.log('d')\n                const newTask = task.data.attributes \n                console.log(task)\n                dispatch({type: 'ADD_TASK', newTask}) \n            })\n        console.log('e')\n    }\n}\n\nexport function deleteTask(id){\n    const configObj = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    return (dispatch) => {\n        fetch(`${URL}/tasks/${id}`, configObj)\n            .then(response => {return response.json()})\n            .then(() => {\n                dispatch({type: 'DELETE_TASK', id})\n            })\n    }\n}\n\nexport function editTask(task){\n    const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            description: task.description,\n            person_id: parseInt(task.person_id),\n            project_id: task.project_id,\n            completed: task.completed\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/tasks/${task.id}`, configObj)\n            .then(response => {return response.json()})\n            .then(editedTask => {\n                console.log(editedTask)\n                let task = editedTask.data.attributes\n                dispatch({type: 'EDIT_TASK', task}) // a task can have data that references tasks and tasks have data that references people\n            })\n    }\n}","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst CloseModal = (props) => { \n        return(\n            <Form.Button onClick={props.closeModal} type=\"submit\" >Cancel</Form.Button>\n        )\n}\n\nexport default CloseModal;","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst TitleInput = (props) => {\n        return(\n            <Form.Input type=\"text\" onChange={event => props.handleOnChange(event)} value={props.title} name=\"title\" placeholder={props.title}/>\n        )\n}\n\nexport default TitleInput","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst DescriptionInput = (props) => {\n        return(\n            <Form.TextArea type=\"text\" onChange={event => props.handleOnChange(event)} value={props.description} name=\"description\" placeholder={props.description}/>\n        )\n}\n\nexport default DescriptionInput;","import React, {Component} from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Button, Header, Image, Modal, Form } from 'semantic-ui-react'\nimport CloseModal from './CloseModal';\nimport TitleInput from './TitleInput';\nimport DescriptionInput from './DescriptionInput'\n\n\n\nexport default class ProjectInput extends Component{\n    state = {\n        title: '',\n        description: '',\n        showModal: false\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault()\n        this.props.saveProject(this.state)\n        this.setState({\n            title: '',\n            description: '',\n            showModal: false\n        })\n    }\n\n    openModal = () => {\n        this.setState({\n            showModal: true\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            showModal: false\n        })\n    }\n\n\n\n    renderForm = () => {\n        return (\n            <>\n            <Button onClick={this.openModal}> <i className=\"add icon center\"></i></Button>\n            <Modal dimmer={\"inverted\"} open={this.state.showModal} >\n                <Modal.Header>Add a project</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' />\n                    <Modal.Description>\n                        {/* <ProjectForm handleOnChange={this.handleOnChange} closeModal={this.closeModal} handleOnSubmit={this.handleOnSubmit} title={this.state.title} description={this.state.description}/> */}\n                        <Form>\n                        <Header>Title:</Header>\n                                {/* <Form.Input type=\"text\" onChange={event => this.handleOnChange(event)} value={this.state.title} name=\"title\" placeholder={this.state.title}/> */}\n                                <TitleInput handleOnChange={this.handleOnChange} title={this.state.title}/>\n                        <Header>Description:</Header>\n                                <DescriptionInput handleOnChange={this.handleOnChange} description={this.state.description}/>\n\n                                {/* <Form.TextArea type=\"textarea\" onChange={event => this.handleOnChange(event)} value={this.state.description} name=\"description\" placeholder={this.state.description}/> */}\n                                {/* <Form.Button onClick={this.closeModal} type=\"submit\" >Cancel</Form.Button> */}\n                                <Form.Button onClick={(event) => this.handleOnSubmit(event)} type=\"submit\" >Submit</Form.Button>\n                                <CloseModal closeModal={this.closeModal}/>\n                        </Form>\n                        \n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n\n\n            </>\n        )\n    }\n    render(){\n        return(\n            <>\n            {/* {this.state.showForm ? this.renderForm() : <Button onClick={this.showForm}> Add project </Button>}   */}\n            {this.renderForm()}\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Input, Dropdown, Label, TextArea, Button, Form } from 'semantic-ui-react';\n\n\nclass Task extends Component{\n\n    state = {\n        description: this.props.description,\n        id: this.props.id,\n        person_id: this.props.person_id,\n        completed: this.props.completed,\n        project_id: this.props.project_id\n    }\n\n    makeCompleted = () => {\n        this.setState({\n            completed: true\n        })\n    }\n\n    makeInProgress = () => {\n        this.setState({\n            completed: false\n        })\n    }\n\n    handleSave = () => {\n        console.log(this.state.person_id)\n        this.props.editTask(this.state)\n    }\n\n    handleDelete = () => {\n        this.props.deleteTask(this.props.id)\n    }\n\n    assignTo = (e) => {\n        const ownerIndex = this.props.people.findIndex(person => person.key === e.target.innerText)\n        this.setState({\n            person_id: this.props.people[ownerIndex].id // use onchange for dropdowns/select and parentNode.id instead of value\n        })\n    }\n    \n    renderInProgress = () => {\n        let owner = this.props.people.find(person => person.id === this.state.person_id) // person_id is a propery of the task and we can find the owner in the people state\n        return (\n            \n            <>\n            <br></br>\n\n            {/* {console.log(owner)}\n            {console.log(this.props.people)}\n            {console.log(this.state.person_id)} */}\n                <Input  size=\"small\" labelPosition='right' type='text' value={this.state.description} placeholder={this.state.description}>\n\n                <TextArea onChange={event => this.setState({description: event.target.value})} value={this.state.description} rows=\"4\" cols=\"70\"/>\n                <Button onClick={this.handleSave} icon=\"save\"></Button>\n                <Button onClick={this.makeCompleted} icon=\"check circle\"></Button>\n                <Button onClick={this.handleDelete} icon=\"trash\"></Button>\n\n                </Input>\n            <br></br>\n\n                Assigned to: <Dropdown button className='icon' placeholder={owner ? owner.key : 'Yet to be assigned'} onChange={e => this.assignTo(e)} floating labeled icon='users' options={this.props.people} />\n            <br></br>\n\n            <br></br>\n            <br></br>\n            <br></br>\n            </>\n\n        )\n    }\n    \n    renderCompleted = () => {\n        let owner = this.props.people.find(person => person.id === this.state.person_id)\n        return (\n            <>\n            <br></br>\n            <Label color='green' image>\n            <img alt=\"Profile Pic\" src='https://api.adorable.io/avatars/77/stevie@adorable.io.png' />\n                completed by {owner ? owner.key : 'Yet to be assigned'}\n            <Label.Detail>{this.props.description}</Label.Detail>\n\n            </Label>\n            <Button onClick={this.handleSave} icon=\"save\"></Button>\n            <Button onClick={this.makeInProgress} icon=\"redo\"></Button>   \n            <Button onClick={this.handleDelete} icon=\"trash\"></Button>\n\n            <br></br>\n            </>\n        )     \n     }\n    \n    render(){\n        return (\n            <>\n            <Form> \n            {this.state.completed ? this.renderCompleted() : this.renderInProgress()}\n            </Form>\n            {/* {console.log(this.state)} */}\n            </>\n        )\n    }\n}\n\nexport default Task\n\n\n","import React, {Component} from 'react';\nimport { Header, Image, Modal, Form, Button, Divider, Grid } from 'semantic-ui-react'\nimport {withRouter} from 'react-router-dom';\nimport Task from './Task'\n\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\n\nclass TasksModal extends Component{\n    state = {\n        title: this.props.project.title,\n        started: this.props.project.started,\n        description: this.props.project.description,\n        id: this.props.project.id,\n        edit: false,\n        loading: false\n    }\n    \n    setPercent = () => {\n        const projectTasks = this.props.tasks.filter(task => task.project_id === this.state.id)\n        let percent =  0\n        let numberCompleted = 0\n        let numberInProgress = 0\n        for(let i=0; i<projectTasks.length;i++){\n            if(projectTasks[i].completed === true){\n                numberCompleted++\n                console.log(numberCompleted)\n            }else{\n                numberInProgress++\n                console.log(numberInProgress)\n            }\n            percent = numberCompleted / (numberInProgress + numberCompleted)\n        }\n        // console.log(percent)\n        this.setState({\n            percent: percent * 100\n        })\n    }\n\n    componentDidMount(){\n        this.setPercent()\n    }\n    \n    startEdit = () => {\n        this.setState({\n            edit: true\n        })\n    }\n\n    cancelEdit = () => {\n        this.setState({\n            edit: false\n        })\n    }\n\n    saveEdit = (event) => {\n        event.preventDefault()\n        this.props.editProject({\n            title: this.state.title,\n            started: this.props.project.started,\n            id: this.props.project.id,\n            description: this.state.description\n        })\n        this.setState({\n            edit: false\n        })\n        // console.log(this.props.projects)\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    renderEdit = (project) => {\n        return (\n            <Modal.Description>\n                <Form onSubmit={(event) => this.saveEdit(event)}>\n                    <Form.Input type=\"text\" onChange={event => this.handleOnChange(event)} value={this.state.title} name=\"title\" />\n                    <Form.TextArea type=\"textarea\" onChange={event => this.handleOnChange(event)} value={this.state.description} name=\"description\" />\n                    <Button icon=\"save\" type=\"submit\" ></Button>\n                    <Button icon=\"close\" onClick={this.cancelEdit}></Button>\n                </Form>\n            </Modal.Description>\n        )\n    }\n    renderDescription = (project) => {\n        return (\n            <>\n                <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                    <Button basic secondary content=\"Edit Project\" labelPosition='right' icon=\"pencil\" onClick={e => this.startEdit(e)} ></Button>                               \n                    </Grid.Column>\n                    <Grid.Column>\n                    </Grid.Column>\n                    <Grid.Column>\n                    <Button basic content=\"Exit Project Page\"  onClick={ e => this.props.handleHideTasksModal(e)} secondary ></Button>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid> \n                <Header>{project.title}</Header>\n                <p>{project.description}</p>\n\n                      \n            </>          \n        )\n    }\n\n    renderTasks = () => {// filter tasks for this project only\n        // console.log(this.props.tasks)\n        const projectTasks = this.props.tasks.filter(task => task.project_id === this.state.id)\n        return projectTasks.map(task => <Task key={task.id} people={this.props.people} person_id={task.person_id} deleteTask={this.props.deleteTask} project_id={this.state.id} editTask={this.props.editTask} id={task.id} description={task.description} completed={task.completed}/>)\n    }\n\n    handleAddTask = () => {\n        console.log('a')\n        this.props.addTask(this.state.id)\n        console.log('g')\n        console.log(this.state.id)\n    }\n\n    renderModal = () => {\n        // console.log(this.props)\n        if(!this.props.loading){\n            const project = this.props.project\n            return(\n                <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <Modal size={\"large\"} dimmer={\"inverted\"} open={true} >\n                                <Modal.Header></Modal.Header>\n                                    <Modal.Content image scrolling>\n                                    <Image size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' wrapped/>\n                                    <Modal.Description>\n                                    {this.state.edit ?  this.renderEdit(project) : this.renderDescription(project)}\n                                    {/* {this.setPercent()} */}\n                                    <Progress type=\"circle\" width={30} percent={this.state.percent} status=\"success\" />\n                                    <Divider horizontal>Tasks</Divider>\n                                    <Button basic secondary onClick={this.handleAddTask}>Add Task</Button>\n                                    <br></br>\n                                    {this.renderTasks()}\n                                    {/* {console.log(this.props.tasks.filter(task => task.projectId === this.state.id))} */}\n                                    {/* {console.log(project)} */}\n\n                                    </Modal.Description>\n                                </Modal.Content>\n\n\n                            </Modal>\n                        </div>\n                    </div>\n                \n            </>\n            )\n        }else{\n            return (\n                <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <Modal size={\"large\"}dimmer={\"inverted\"} open={true} >\n                               <p>Loading</p> \n\n\n                            </Modal>\n                        </div>\n                    </div>\n                </>\n                \n            )\n        }\n    }\n\n    render(){\n        return( \n            <>\n            {this.renderModal()}\n            </>\n        )\n    }\n    \n  }\n\nexport default withRouter(TasksModal)","import React, {Component} from 'react';\nimport { Button, Confirm } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport TasksModal from '../tasks/TasksModal';\n\n\n\n// modal is to display tasks\n\nexport default class ProjectCard extends Component{\n    state = {\n      open: false,\n      edit: false,\n      percent: 50,\n      showTasksModal: false\n    }\n\n    handleDeleteClick = (event) => {\n      this.setState({\n        open: true\n      })\n    }\n\n    handleCancel = () => {\n      this.setState({\n        open: false\n      })\n    }\n\n    handleConfirm = () => {\n      this.props.deleteProject(this.props.id)\n      this.setState({\n        open: false\n      })\n    }\n\n    setPercent = () =>{\n      console.log(this.props)\n      // const projectTasks = this.props.tasks.filter(task => task.project_id === this.state.id)\n      let percent = 0\n      this.setState({\n        percent: percent\n      })\n    }\n\n    handleShowTasksModal = () => {\n      this.setState({\n        showTasksModal: true\n      })\n    }\n\n    handleHideTasksModal = () => {\n      this.setState({\n        showTasksModal: false\n      })\n    }\n\n\n\n    render(){\n      // const project = this.props.projects.find(project => project.id.toString() === this.props.id)\n      // console.log(this.props.project)\n      // add event listener to exit button on tasks modal to set showTasksModal to false again\n        return(\n          <>\n            \n            {this.state.showTasksModal ? <TasksModal handleHideTasksModal={this.handleHideTasksModal} project={this.props.project} tasks={this.props.tasks} people={this.props.people} editProject={this.props.editProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask}/> : null}\n            <div className=\"eight wide column\" >\n            <div className=\"ui card\">\n              <div className=\"image\">\n              </div>\n              <div className=\"content\">\n                  {/* <input value={this.props.title}/> */}\n                      {/* <Link className=\"header\" to={`/project-${this.props.id}`}>{this.props.title}</Link>  */}\n                      {/* make this link set show tasks modal to true. gotta change link to event listener and it has to go to task modal */}\n                      {/* move tasks modal code to here */}\n                      <Link className=\"header\" onClick={e => this.handleShowTasksModal(e)}>{this.props.title}</Link>\n                      <div className=\"meta\">\n                    <span className=\"date\">{this.props.started}</span>\n                  </div>\n                  <div className=\"description\">\n                    {this.props.description}\n                  </div>\n                  <div className=\"ui right aligned grid\">\n              \n                  <div className=\"sixteen wide column\">\n                                   \n                  </div>\n                  </div>\n              </div>\n              <div className=\"extra content\">\n                <div className=\"left floated right aligned six wide column\">\n                        \n                        <Link className=\"header\" to={`/projects/${this.props.id}`}>\n                          <Button basic icon='pencil'/>\n                        </Link> \n                        <Button basic icon='trash' onClick={event => this.handleDeleteClick(event)}>\n                        {/* <i aria-hidden=\"true\" className=\"trash alternate icon right\"></i> */}\n                      </Button>\n                      <Confirm\n                        open={this.state.open}\n                        onCancel={this.handleCancel}\n                        onConfirm={this.handleConfirm}\n                      />        \n                  </div>\n                \n              </div>\n            </div>\n            </div>\n          </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css'\nimport {saveProject, deleteProject, editProject} from '../actions/projectActions' //async actions imported from the actions file\nimport { addTask, deleteTask, editTask } from '../actions/tasksActions';\n\nimport { Input, Grid } from 'semantic-ui-react';\n\n\nimport ProjectInput from '../components/projects/ProjectInput';\nimport ProjectCard from '../components/projects/ProjectCard';\n\n\n\n\n// content changes here with router\n// need Many of these\n// will become a container component\n\nclass Projects extends Component{\n\n    state = {\n        showFormModal: false,\n        searchTerm: ''\n    }\n\n    renderProjects = () => {\n        const searchedProjects = this.props.projects.filter(project => project.title.includes(this.state.searchTerm))\n        return searchedProjects.map( project => <ProjectCard key={project.id} project={project} people={this.props.people} tasks={this.props.tasks} title={project.title} started={project.started} description={project.description} id={project.id} editProject={this.props.editProject} deleteProject={this.props.deleteProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask}/> )\n    }\n\n    renderModal = () => {\n        this.setState({\n            showFormModal: true\n        })\n    }\n\n    setSearchState = () => {\n\n    }\n\n    handleSearchProject = (event) => {\n        this.setState({\n            searchTerm: event.target.value\n        })      \n    }\n    \n\n    render(){\n        return(\n            <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                        <Input className=\"large\"placeholder=\"Search\" onChange={e => this.handleSearchProject(e)}/>\n                            {/* Search input */}<br></br><br></br>\n\n                            <ProjectInput saveProject={this.props.saveProject}/>\n                            {/* {console.log(this.state.searchTerm)}\n                            {console.log(this.state.searchedProjects)} */}\n                            {/* {console.log(this.props.projects.filter(project => project.title.includes(this.state.searchTerm)))} */}\n\n                            {/* search button */}\n                        </div>\n                    </div>\n\n                    <br></br>\n                    <br></br>\n\n                    {/* <div className=\"ui grid container\"> */}\n                    <Grid stackable container columns={2} >\n\n                        {/* <ProjectsList projects={this.props.projects} editProject={this.props.editProject} deleteProject={this.props.deleteProject}/> */}\n                        {this.renderProjects()}\n                        \n                        {/* Ptoject Card can contain Tasks Modal in the code? */}\n                    </Grid>\n\n\n                    {/* </div> */}\n                    <br></br>\n                    <br></br>\n\n\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        projects: state.projects,\n        tasks: state.tasks,\n        people: state.people\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveProject: (project) => dispatch(saveProject(project)), // this changed from the local redux store to the redux thunk backend connection\n        deleteProject: (id) => dispatch(deleteProject(id)),\n        editProject: project => dispatch(editProject(project)),\n        addTask: project_id => dispatch(addTask(project_id)),\n        deleteTask: id => dispatch(deleteTask(id)),\n        editTask: task => dispatch(editTask(task)),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css'\n\nimport TasksModal from '../components/tasks/TasksModal';\nimport { editProject } from '../actions/projectActions';\nimport { addTask, deleteTask, editTask } from '../actions/tasksActions';\n\n\n\n// nested route for tasks needs to be here\n\nclass Tasks extends Component{\n\n    render(){\n        const project = this.props.projects.find(project => project.id.toString() === this.props.match.params.id)\n        return ( // the match params id is a string not an integer\n            <>\n            <TasksModal project={project} tasks={this.props.tasks} people={this.props.people}  match={this.props.match} editProject={this.props.editProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask}/>\n            {/* {console.log(this.props)} */}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        tasks: state.tasks,\n        projects: state.projects,\n        people: state.people\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addTask: project_id => dispatch(addTask(project_id)),\n        deleteTask: id => dispatch(deleteTask(id)),\n        editTask: task => dispatch(editTask(task)),\n        editProject: project => dispatch(editProject(project)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (Tasks)","import React, {Component} from 'react';\nimport { Card, Grid, Segment } from 'semantic-ui-react'\n\n// import Task from '../tasks/Task';\nimport { Link } from 'react-router-dom';\n\n\n\nimport TasksModal from '../tasks/TasksModal';\n\n\n\nexport default class Person extends Component{\n\n    state = {\n        showTasksModal: false\n    }\n\n    renderTasks = () => {\n        const myTasks= this.props.tasks.filter(task => task.person_id === this.props.id) // filter out the tasks that don't belong to the person\n        let project;\n        const list = myTasks.map((task) => {\n                        project = this.props.projects.find(project => project.id === task.project_id )\n                        // console.log(project.title)\n                        // return <li key={task.id}> <Link to={`project-${project.id}`}>{project.title} Project</Link>: {task.description}  {task.completed ? <p>(Completed)</p> : <p>(InProgress)</p>}   </li>\n                        return <li key={task.id}> <Link onClick={this.handleShowTasksModal}>{project.title} Project</Link>: {task.description}  {task.completed ? <p>(Completed)</p> : <p>(InProgress)</p>}   </li>\n                    })\n        return <ul>{list}</ul>\n    }\n\n    handleShowTasksModal = () => {\n        this.setState({\n          showTasksModal: true\n        })\n      }\n  \n    handleHideTasksModal = () => {\n        this.setState({\n          showTasksModal: false\n        })\n      }\n\n    render(){\n        const myTasks= this.props.tasks.filter(task => task.person_id === this.props.id) // filter out the tasks that don't belong to the person\n        let project;\n        const list = myTasks.map((task) => {\n            project = this.props.projects.find(project => project.id === task.project_id )\n        })\n        return(\n            <>\n            {this.state.showTasksModal ? <TasksModal handleHideTasksModal={this.handleHideTasksModal} project={project} tasks={this.props.tasks} people={this.props.people} editProject={this.props.editProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask}/> : null}\n\n            {/* <div className=\"ui stackable eight wide column\" > */}\n                {/* {console.log(this.props.tasks)}  */}\n                {/* See if we are having access to the store and the tasks */}\n                {/* {console.log(myTasks)} */}\n                    <Grid.Column>\n                        <Card\n                        image={this.props.image.src}\n                        header={this.props.name}\n                        meta='Software Engineer'\n                        description={this.renderTasks}\n                        />\n                    </Grid.Column>\n\n            {/* </div> */}\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport Person from '../components/people/Person'\n\nimport { editProject } from '../actions/projectActions' //async actions imported from the actions file\nimport { addTask, deleteTask, editTask } from '../actions/tasksActions';\n\nimport { Card, Grid, Segment } from 'semantic-ui-react'\n\n\nclass People extends Component{\n\n\n    renderPeople = () => {\n        return this.props.people.map(person => <Person editProject={this.props.editProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask} people={this.props.people} projects={this.props.projects} key={person.id} id={person.id} name={person.key} image={person.image} tasks={this.props.tasks}></Person>)\n    }\n\n\n\n    render(){\n        return (\n                <>\n                {/* <div className=\"ui grid container\"> */}\n\n                    <Grid stackable container columns={2} >\n                    {this.renderPeople()}\n                    </Grid>\n                                 {/* </div> */}\n\n                </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        people: state.people,\n        tasks: state.tasks,\n        projects: state.projects\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addPerson: person => dispatch({type: 'ADD_PERSON', person}),\n        editProject: project => dispatch(editProject(project)),\n        addTask: project_id => dispatch(addTask(project_id)),\n        deleteTask: id => dispatch(deleteTask(id)),\n        editTask: task => dispatch(editTask(task))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(People);","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { connect } from 'react-redux';\n\n\nimport NavBar from './components/NavBar';\nimport SideBar from './components/Sidebar';\n\nimport Projects from './containers/Projects';\n// import Profile from './components/Profile';\nimport Tasks from './containers/Tasks';\nimport People from './containers/People';\n\nimport {fetchProjects} from './actions/projectActions'\nimport {fetchPeople} from './actions/peopleActions'\nimport {fetchTasks} from './actions/tasksActions'\n\n\n\n\n\nclass App extends Component{\n\n  componentDidMount(){\n    this.props.fetchProjects()\n    this.props.fetchPeople()\n    this.props.fetchTasks()\n  }\n  \n  render(){\n    return (\n      <>\n        <Router >\n          <div className=\"flexbox\">\n              <SideBar/>\n              <div className=\"main\">\n              <NavBar/>\n                <div className=\"ui container\">\n\n                    {/* <Switch> */}\n                      <Route exact path=\"/\">\n                      <div className=\"ui grid container\">\n                        <div className=\"twelve wide column\" >\n                        <h1>Welcome to your team's Projects Dashboard </h1>\n                        </div>\n                      </div>\n                      </Route>\n                      <Route exact path=\"/login\">\n                        <p>Login</p>\n                      </Route>\n\n                      <Route exact path=\"/projects\" render={routerProps => <Projects {...routerProps}/>}/> \n                      {/* I sent router props to have acces to match */}\n\n                      <Route exact path={`/${\"project\"}-:id`} render={routerProps => <Tasks {...routerProps} />} >\n                        {/* move this to the projects view and don't create a new route */}\n                      </Route>\n\n                      <Route exact path={`/people`}>\n                        <People />\n                      </Route>\n                      \n                    {/* </Switch>  */}\n                </div>                                            \n              </div>\n          </div> \n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    projects: state.projects,\n    people: state.people,\n    tasks: state.tasks\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchProjects: () => dispatch(fetchProjects()),\n      fetchPeople: () => dispatch(fetchPeople()),\n      fetchTasks: () => dispatch(fetchTasks())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const URL ='https://secure-shelf-48338.herokuapp.com/'\n\nexport function fetchPeople(){\n    return (dispatch) => {\n            fetch(`${URL}/people`)\n                .then(response => {return response.json()})\n                .then(people => {\n                    // console.log(projects)\n                    dispatch({type: 'LOAD_PEOPLE', people}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error.message))\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore,  applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/index';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const composeEnhancers = composeWithDevTools();\n\nexport const store = createStore(reducer, \n  applyMiddleware(thunk)\n  );\n// console.log(store.getState())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}