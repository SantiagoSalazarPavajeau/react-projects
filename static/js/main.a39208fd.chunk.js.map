{"version":3,"sources":["reducers/projects.js","reducers/index.js","reducers/tasks.js","reducers/people.js","components/NavBar.js","components/Sidebar.js","actions/projectActions.js","actions/tasksActions.js","components/projects/CloseModal.js","components/projects/TitleInput.js","components/projects/DescriptionInput.js","components/projects/ProjectInput.js","components/tasks/Task.js","components/tasks/TasksModal.js","components/projects/ProjectCard.js","containers/Projects.js","components/people/Person.js","containers/People.js","actions/peopleActions.js","components/people/Signup.js","components/people/Login.js","components/people/Profile.js","App.js","serviceWorker.js","index.js"],"names":["cuid","combineReducers","projects","state","action","type","project","title","newProject","started","description","id","filter","projectIndex","findIndex","slice","data","map","attributes","concat","tasks","newTask","task","taskIndex","people","person","username","newPerson","image","deletedPerson","NavBar","props","className","loggedIn","to","onClick","e","handleLogout","SideBar","aria-hidden","editProject","configObj","method","headers","body","JSON","stringify","dispatch","fetch","URL","then","response","json","editedProject","addTask","project_id","person_id","completed","deleteTask","editTask","parseInt","editedTask","CloseModal","Form","Button","closeModal","TitleInput","Input","onChange","event","handleOnChange","value","name","placeholder","DescriptionInput","TextArea","ProjectInput","useState","setProject","showModal","setShowModal","target","openModal","Modal","dimmer","open","Header","Content","Image","wrapped","size","alt","src","Description","preventDefault","createNewProject","handleOnSubmit","Task","setTask","owner","setOwner","dropdown","setDropDown","useSelector","useDispatch","useEffect","dropdownFormat","push","key","text","avatar","find","makeCompleted","makeInProgress","handleSave","handleDelete","Label","color","Detail","icon","labelPosition","rows","cols","Dropdown","button","ownerIndex","innerText","assignTo","floating","labeled","options","TasksModal","projectTasks","setProjectTasks","edit","setEdit","loading","setLoading","percent","setPercent","calculatePercent","numberCompleted","numberInProgress","i","length","cancelEdit","saveEdit","renderDescription","Grid","columns","Row","Column","basic","secondary","content","handleHideTasksModal","handleAddTask","Loader","active","scrolling","onSubmit","renderEdit","width","status","Divider","horizontal","ProjectCard","setOpen","showTasksModal","setShowTasksModal","handleShowTasksModal","Confirm","onCancel","onConfirm","deleteProjectCallback","Projects","searchTerm","setSearchTerm","deleteProject","saveProject","stackable","container","toLowerCase","includes","Person","projectId","setProjectId","Card","header","list","People","loginUser","user","Accept","resp","Signup","password","showSucces","error","handleChange","setState","handleSubmit","createUser","renderForm","Message","success","this","Component","connect","Login","auth","handleLogin","history","Profile","currentUser","deletePersonCallback","handleDeletePerson","App","catch","console","log","message","localStorage","getItem","removeItem","deletePerson","exact","path","render","routerProps","Boolean","window","location","hostname","match","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a39208fd.chunk.js","sourcesContent":["import cuid from 'cuid';\nexport const cuidFn = cuid;\n\n\nexport default function projects(\n    state = []\n    ,\n    action){\n        switch(action.type){\n            case 'ADD_PROJECT':\n                const project = {\n                    title: action.newProject.title,\n                    started: '',\n                    description: action.newProject.description,\n                    id: action.newProject.id\n                }\n                return [...state, project]\n            case 'DELETE_PROJECT':\n                return [...state.filter(project => project.id !== action.id)]\n            case 'EDIT_PROJECT':\n                let projectIndex = state.findIndex(project => project.id === action.project.id) //state is empty if load projects does not include state\n                return [...state.slice(0, projectIndex), action.project, ...state.slice(projectIndex + 1)]\n            case 'LOAD_PROJECTS':\n                // console.log(action.projects.data)\n                let projects = action.projects.data.map(project => project.attributes)\n                // console.log(...state, projects)\n                return [...state.concat(projects)] // this sets state to include the projects. if we only return the projects object, state will be empty on other actions\n            case 'LOADING_PROJECTS':\n                return [...state]\n            default:\n                return state\n        }\n\n}\n\n\n\n\n\n","import { combineReducers } from 'redux'\nimport projects from './projects'\nimport tasks from './tasks'\nimport people from './people'\n\nexport default combineReducers({\n    projects,\n    tasks,\n    people\n})\n\n","\n\nexport default function tasks(state = [], action){\n    switch(action.type){\n        case 'ADD_TASK':\n                // console.log(action.task)\n                // console.log(state)\n                return[...state.concat(action.newTask)]\n            case 'DELETE_TASK':\n                return [...state.filter(task => task.id !== action.id)]\n            case 'EDIT_TASK':\n                let taskIndex = state.findIndex(task => task.id === action.task.id)\n                // console.log(action.task)\n                return[...state.slice(0, taskIndex), action.task, ...state.slice(taskIndex + 1)]\n            case 'LOAD_TASKS':\n                const tasks = action.tasks.data.map(task => task.attributes)\n                return [...state.concat(tasks)]\n            default:\n                return state;\n    }\n}\n\n","export default function people(state = [], action){\n    switch(action.type){\n        case 'ADD_PERSON':\n                const person = {\n                        username: action.newPerson.username,\n                        image: action.newPerson.image,\n                        id: action.newPerson.id\n                    }\n                return [...state, person]\n        case 'DELETE_PERSON':\n                // console.log(action.id)\n                let deletedPerson;\n                state.map(person => person.id !== action.id ? deletedPerson = person : null)\n                // console.log(deletedPerson)\n                // console.log(state.filter(person => person.username !== deletedPerson.username))\n                return [...state.filter(person => person.username !== deletedPerson.username)]\n        case 'LOAD_PEOPLE':\n                const people = action.people.data.map(person => person.attributes)\n                return [...state.concat(people)]\n        default:\n                return state\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst NavBar = (props)=>{\n        return(\n            <div className=\"ui stackable menu\">\n                <div className=\"header item\">\n                    Projects Dashboard\n                </div>\n                    {props.loggedIn ? null : <Link to=\"/login\" className=\"ui item\">Login</Link>}\n                    {props.loggedIn ? null : <Link to=\"/signup\" className=\"ui item\" >Signup</Link>}\n                    {props.loggedIn ? <Link to=\"/profile\" className=\"ui item\" >Profile</Link> : null }\n                    {props.loggedIn ? <a className=\"ui item right\" onClick={e => props.handleLogout(e)}> Logout </a> : null}\n\n            </div>\n            \n        )\n}\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../App.css\";\n\n\n// fix import\nconst SideBar = () => {\n        return(\n        <div className=\"sidebar\">\n            <div className=\"ui left vertical inverted icon visible sidebar menu\">\n                <Link to=\"/\" className=\"item\">\n                        <i aria-hidden=\"true\" className=\"home icon\"></i>\n                        Home\n                </Link>\n                <Link to=\"/projects\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"sitemap icon\"></i>\n                        Projects\n                </Link>\n                <Link to=\"/people\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"users icon\"></i>\n                        People\n                </Link>\n            </div>\n        </div>\n        )\n}\n\nexport default SideBar;","import { URL } from '../index.js'\n\nexport function fetchProjects(){\n    return (dispatch) => {\n        dispatch({type: 'LOADING_PROJECTS'})\n            fetch(`${URL}/projects`)\n                .then(response => {return response.json()})\n                .then(projects => {\n                    // console.log(projects)\n                    dispatch({type: 'LOAD_PROJECTS', projects}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error))\n    }\n}\n\nexport function saveProject(project){\n    const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: project.title,\n            description: project.description\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects`, configObj)\n            .then(response => {return response.json()})\n            .then(project => {\n                // console.log(project)\n                const newProject = project.data.attributes // async response from server adds project\n                dispatch({type: 'ADD_PROJECT', newProject}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}\n\nexport function deleteProject(id){\n    const configObj = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects/${id}`, configObj)\n            .then(response => {return response.json()})\n            .then(() => {\n                dispatch({type: 'DELETE_PROJECT', id}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}\n\nexport function editProject(project){\n    const configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            title: project.title,\n            description: project.description\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/projects/${project.id}`, configObj)\n            .then(response => {return response.json()})\n            .then(editedProject => {\n                // console.log(editedProject)\n                let project = editedProject.data.attributes\n                dispatch({type: 'EDIT_PROJECT', project}) // a project can have data that references tasks and tasks have data that references people\n            })\n    }\n}","import { URL } from '../index.js'\n\nexport function fetchTasks(){\n    return (dispatch) => {\n            fetch(`${URL}/tasks`)\n                .then(response => {return response.json()})\n                .then(tasks => {\n                    // console.log(tasks)\n                    dispatch({type: 'LOAD_TASKS', tasks}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error.message))\n    }\n}\n\nexport function addTask(project_id){\n    \n    const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            description: \"New task...\",\n            project_id: project_id,\n            person_id: 1,  // person_id needed for ActiveRecord to commit task to database\n            completed: false\n        })\n      };\n    // console.log('b')\n    return (dispatch) => {\n        // console.log('c')\n        fetch(`${URL}/tasks`, configObj)\n            .then(response => {return response.json()})\n            .then(task => {\n                // console.log(project)\n                // console.log('d')\n                const newTask = task.data.attributes \n                // console.log(task)\n                dispatch({type: 'ADD_TASK', newTask}) \n            })\n        // console.log('e')\n    }\n}\n\nexport function deleteTask(id){\n    const configObj = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    return (dispatch) => {\n        fetch(`${URL}/tasks/${id}`, configObj)\n            .then(response => {return response.json()})\n            .then(() => {\n                dispatch({type: 'DELETE_TASK', id})\n            })\n    }\n}\n\nexport function editTask(task){\n    const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n            description: task.description,\n            person_id: parseInt(task.person_id),\n            project_id: task.project_id,\n            completed: task.completed\n        })\n      };\n    return (dispatch) => {\n        fetch(`${URL}/tasks/${task.id}`, configObj)\n            .then(response => {return response.json()})\n            .then(editedTask => {\n                let task = editedTask.data.attributes\n                dispatch({type: 'EDIT_TASK', task}) // a task can have data that references tasks and tasks have data that references people\n            })\n    }\n}","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst CloseModal = (props) => { \n        return(\n            <Form.Button onClick={props.closeModal} type=\"submit\" >Cancel</Form.Button>\n        )\n}\n\nexport default CloseModal;","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst TitleInput = (props) => {\n        return(\n            <Form.Input type=\"text\" onChange={event => props.handleOnChange(event)} value={props.title} name=\"title\" placeholder={props.title}/>\n        )\n}\n\nexport default TitleInput","import React from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Form } from 'semantic-ui-react'\n\nconst DescriptionInput = (props) => {\n        return(\n            <Form.TextArea type=\"text\" onChange={event => props.handleOnChange(event)} value={props.description} name=\"description\" placeholder={props.description}/>\n        )\n}\n\nexport default DescriptionInput;","import React, {useState} from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Button, Header, Image, Modal, Form } from 'semantic-ui-react'\nimport CloseModal from './CloseModal';\nimport TitleInput from './TitleInput';\nimport DescriptionInput from './DescriptionInput'\n\n\n\nconst ProjectInput = (props) => {\n    // state = {\n    //     title: '',\n    //     description: '',\n    //     showModal: false\n    // }\n\n    const [project, setProject] = useState({title: '', description: ''})\n    const [showModal, setShowModal] = useState(false)\n\n    const handleOnChange = (event) => {\n        setProject({\n            ...project, \n            [event.target.name]: event.target.value})\n    }\n\n    const handleOnSubmit = (event) => {\n        event.preventDefault()\n        props.createNewProject(project)\n        setProject({\n            title: '',\n            description: '',\n        })\n        setShowModal(false)\n    }\n\n    const openModal = () => {\n        setShowModal(true)\n    }\n\n    const closeModal = () => {\n        setShowModal(false)\n    }\n\n\n\n    const renderForm = () => {\n        return (\n            <>\n            <Button onClick={openModal}> <i className=\"add icon center\"></i></Button>\n            <Modal dimmer={\"inverted\"} open={showModal} >\n                <Modal.Header>\n                    Add a project:\n                </Modal.Header>\n                    <Modal.Content image>\n                        <Image wrapped size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' />\n                        <Modal.Description>\n                            <Form>\n                                <Header>Title:</Header>\n                                    <TitleInput handleOnChange={handleOnChange} title={project.title}/>\n                                <Header>Description:</Header>\n                                    <DescriptionInput handleOnChange={handleOnChange} description={project.description}/>\n                                <Form.Button onClick={(event) => handleOnSubmit(event)} type=\"submit\" >Submit</Form.Button>\n                                <CloseModal closeModal={closeModal}/>\n                            </Form>                        \n                        </Modal.Description>\n                    </Modal.Content>\n            </Modal>\n            </>\n        )\n    }\n    return(\n        <>\n            {renderForm()}\n        </>\n    )\n}\n\nexport default ProjectInput;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input, Dropdown, Label, TextArea, Button, Form } from 'semantic-ui-react';\n\nimport {deleteTask, editTask} from '../../actions/tasksActions'\n\n\n\nconst Task = (props) => {\n\n\n    const [task, setTask] = useState(props.task)\n    const [owner, setOwner] = useState(null)\n    const [dropdown, setDropDown] = useState(null)\n\n    const people = useSelector(state => state.people)\n\n    const dispatch = useDispatch()\n\n    useEffect(\n        ()=> {\n        let dropdownFormat = []\n        people.map(person => dropdownFormat.push({id: person.id, key: person.username, text: person.username, value: person.username, image: { avatar: true, src: person.image } }))\n        setDropDown(dropdownFormat)\n        setOwner(dropdownFormat.find(person => person.id === task.person_id))\n        \n        },[]\n    )\n\n    \n\n    const makeCompleted = () => {\n        setTask({...task, completed: true})\n    }\n\n    const makeInProgress = () => {\n        setTask({...task, completed: false})\n    }\n\n    const handleSave = () => {\n        dispatch(editTask(task))\n    }\n\n    const handleDelete = () => {\n        dispatch(deleteTask(task.id))\n    }\n\n    const assignTo = (e) => {\n        const ownerIndex = people.findIndex(person => person.username === e.target.innerText)\n        setTask({\n            ...task,\n            person_id: people[ownerIndex].id // use onchange for dropdowns/select and parentNode.id instead of value\n        })\n    }\n    \n    const renderInProgress = () => {\n        \n        return (\n            \n            <>\n            <br></br>\n\n                <Input  size=\"small\" labelPosition='right' type='text' value={task.description} placeholder={task.description}>\n\n                <TextArea onChange={event => setTask({...task, description: event.target.value})} value={task.description} rows=\"4\" cols=\"70\"/>\n\n                <Button onClick={handleSave} icon=\"save\"></Button>\n                <Button onClick={makeCompleted} icon=\"check circle\"></Button>\n                <Button onClick={handleDelete} icon=\"trash\"></Button>\n\n                </Input>\n            <br></br>\n\n                Assigned to: <Dropdown button className='icon' placeholder={owner ? owner.key : 'Yet to be assigned'} onChange={e => assignTo(e)} floating labeled icon='users' options={dropdown} />\n            <br></br>\n\n            <br></br>\n            <br></br>\n            <br></br>\n            </>\n\n        )\n    }\n    \n    const renderCompleted = () => {\n        return (\n            <>\n            <br></br>\n            <Label color='green' image>\n            <img alt=\"Profile Pic\" src='https://api.adorable.io/avatars/77/stevie@adorable.io.png' />\n                completed by {owner ? owner.key : 'Yet to be assigned'}\n            <Label.Detail>{task.description}</Label.Detail>\n            </Label>\n            <Button onClick={handleSave} icon=\"save\"></Button>\n            <Button onClick={makeInProgress} icon=\"redo\"></Button>\n            <Button onClick={handleDelete} icon=\"trash\"></Button>\n            <br></br>\n            </>\n        )     \n     }\n    \n    return (\n        <>\n        <Form> \n            {task.completed ? renderCompleted() : renderInProgress()}\n        </Form>\n        </>\n    )\n}\n\nexport default Task;\n\n\n","import React, { useEffect, useState} from 'react';\nimport { Header, Image, Modal, Form, Button, Divider, Grid, Loader } from 'semantic-ui-react'\nimport Task from './Task'\n\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\nimport {editProject} from '../../actions/projectActions'\nimport {addTask, deleteTask, editTask} from '../../actions/tasksActions'\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst TasksModal = (props) => {\n\n    const people = useSelector(state => state.people)\n    const projects = useSelector(state => state.projects)\n    const tasks = useSelector(state => state.tasks)\n    \n    const [project, setProject] = useState(null)\n    const [projectTasks, setProjectTasks] = useState(null)\n    const [edit, setEdit] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [percent, setPercent] = useState(0)\n\n    const dispatch = useDispatch()\n\n    useEffect(\n        () => {\n            setProject(projects.find(project => project.id === parseInt(props.project_id)))\n            setProjectTasks(tasks.filter(task => task.project_id === parseInt(props.project_id)))\n            setLoading(false)\n        }, []\n    )\n    useEffect(\n        () => {\n           calculatePercent() \n        }, [projectTasks]\n    )\n    const calculatePercent = () => {\n            if (projectTasks){\n                let numberCompleted = 0\n                let numberInProgress = 0\n                for(let i=0; i<projectTasks.length;i++){\n                    if(projectTasks[i].completed === true){\n                        numberCompleted++\n                    }else{\n                        numberInProgress++\n                    }\n                    setPercent((numberCompleted / (numberInProgress + numberCompleted))*100)\n                }\n        }\n    }\n\n    \n    const startEdit = () => {\n        setEdit(true)\n    }\n\n    const cancelEdit = () => {\n        setEdit(false)\n    }\n\n    const saveEdit = (event) => {\n        event.preventDefault()\n        dispatch(editProject(project))\n        setEdit(false)\n    }\n\n    const handleOnChange = (event) => {\n        setProject({\n            ...project,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const renderEdit = (project) => {\n        return (\n            <Modal.Description>\n                <Form onSubmit={(event) => saveEdit(event)}>\n                    <Form.Input type=\"text\" onChange={event => handleOnChange(event)} value={project.title} name=\"title\" />\n                    <Form.TextArea type=\"textarea\" onChange={event => handleOnChange(event)} value={project.description} name=\"description\" />\n                    <Button icon=\"save\" type=\"submit\" ></Button>\n                    <Button icon=\"close\" onClick={cancelEdit}></Button>\n                </Form>\n            </Modal.Description>\n        )\n    }\n    const renderDescription = (project) => {\n        return (\n            <>\n                <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                    <Button basic secondary content=\"Edit Project\" labelPosition='right' icon=\"pencil\" onClick={e => startEdit(e)} ></Button>                               \n                    </Grid.Column>\n                    <Grid.Column>\n                    </Grid.Column>\n                    <Grid.Column>\n                    <Button basic content=\"Exit Project Page\"  onClick={ e => props.handleHideTasksModal(e)} secondary ></Button>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid> \n                <Header>{project.title}</Header>\n                <p>{project.description}</p>\n                      \n            </>          \n        )\n    }\n\n    const renderTasks = () => {// filter tasks for current project only\n        const projectTasks = tasks.filter(task => task.project_id === project.id)\n        return projectTasks.map(task => <Task key={task.id} task={task} people={people} deleteTask={deleteTask} project_id={project.id} editTask={editTask} id={task.id} description={task.description} completed={task.completed}/>)\n    }\n\n    const handleAddTask = () => {\n        dispatch(addTask(project.id))\n    }\n\n    const renderModal = () => {\n        if(!loading){\n            return(\n                <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <Modal size={\"large\"} dimmer={\"inverted\"} open={true} >\n                                <Modal.Header></Modal.Header>\n                                    <Modal.Content image scrolling>\n                                    <Image size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' wrapped/>\n                                    <Modal.Description>\n                                    {edit ?  renderEdit(project) : renderDescription(project)}\n                                    <Progress type=\"circle\" width={30} percent={percent} status=\"success\" />\n                                    <Divider horizontal>Tasks</Divider>\n                                    <Button basic secondary onClick={handleAddTask}>Add Task</Button>\n                                    <br></br>\n                                    {renderTasks()}\n\n\n                                    </Modal.Description>\n                                </Modal.Content>\n\n\n                            </Modal>\n                        </div>\n                    </div>\n                \n            </>\n            )\n        }else{\n            return (\n                <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <Modal size={\"large\"}dimmer={\"inverted\"} open={true} >\n                               <p>Loading</p>\n                               \n\n                            </Modal>\n                        </div>\n                    </div>\n                </>\n                \n            )\n        }\n    }\n\n    return( \n        <>\n        {(tasks[0]) ? null : <Loader active>Loading</Loader>}\n        {renderModal()}\n        </>\n    )\n    \n  }\n\nexport default TasksModal;","import React, {useState} from 'react';\nimport { Button, Confirm } from 'semantic-ui-react'\nimport TasksModal from '../tasks/TasksModal';\n\n\n\n\nconst ProjectCard = (props) => {\n    // state = {\n    //   open: false,\n    //   edit: false,\n    //   percent: 50,\n    //   showTasksModal: false\n    // }\n\n    const [open, setOpen] = useState(false)\n    const [showTasksModal, setShowTasksModal] = useState(false)\n\n\n\n    const handleDeleteClick = () => {\n      setOpen(true)\n    }\n\n    const handleCancel = () => {\n      setOpen(false)\n    }\n\n    const handleConfirm = () => {\n      props.deleteProjectCallback(props.id)\n      setOpen(false)\n    }\n\n    const handleShowTasksModal = () => {\n      setShowTasksModal(true)\n    }\n\n    const handleHideTasksModal = () => {\n      setShowTasksModal(false)\n    }\n\n    return(\n      <>\n        \n      {showTasksModal ? <TasksModal handleHideTasksModal={handleHideTasksModal} project_id={props.project.id} /> : null}\n        \n        <div className=\"eight wide column\" >\n          <div className=\"ui card\">\n            <div className=\"content\">\n                <a className=\"header\" onClick={e => handleShowTasksModal(e)}>{props.title}</a>\n              <div className=\"meta\">\n                <span className=\"date\">{props.started}</span>\n              </div>\n              <div className=\"description\">\n                {props.description}\n              </div>\n            </div>\n          \n            <div className=\"extra content\">\n              <div className=\"left floated right aligned six wide column\">                      \n                <Button basic icon='pencil' onClick={e => handleShowTasksModal(e)}/>\n                <Button basic icon='trash' onClick={event => handleDeleteClick(event)}/>\n                <Confirm\n                  open={open}\n                  onCancel={handleCancel}\n                  onConfirm={handleConfirm}\n                />\n              </div>          \n            </div>\n          </div>\n        </div>\n      </>\n    )\n}\n\nexport default ProjectCard;","import React, { useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../App.css'\nimport {saveProject, deleteProject, editProject} from '../actions/projectActions' //async actions imported from the actions file\nimport { addTask, deleteTask, editTask } from '../actions/tasksActions';\n\nimport { Input, Grid, Loader } from 'semantic-ui-react';\n\n\nimport ProjectInput from '../components/projects/ProjectInput';\nimport ProjectCard from '../components/projects/ProjectCard';\n\n\n\n\n// content changes here with router\n// need Many of these\n// will become a container component\n\nfunction Projects(){\n\n    // state = {\n    //     showFormModal: false,\n    //     searchTerm: ''\n    // }\n\n    const [showFormModal, setShowFormModal] = useState(false)\n    const [searchTerm, setSearchTerm] = useState('')\n\n    const projects = useSelector(state => state.projects)\n    const people = useSelector(state => state.people)\n    const tasks = useSelector(state => state.tasks)\n\n    const dispatch = useDispatch()\n\n\n\n    const renderModal = () => {\n        setShowFormModal(true)\n    }\n\n    const handleSearchProject = (event) => {\n        setSearchTerm(event.target.value)     \n    }\n\n    const createNewProject = (project) => {\n        dispatch(saveProject(project))\n    }\n\n    const deleteProjectCallback = (id) => {\n        dispatch(deleteProject(id))\n    }\n\n    const renderProjects = () => {\n        const searchedProjects = projects.filter(project => project.title.toLowerCase().includes(searchTerm.toLowerCase()))\n        return searchedProjects.map( project => <ProjectCard key={project.id} project={project} people={people} tasks={tasks} title={project.title} started={project.started} description={project.description} id={project.id} editProject={editProject} deleteProjectCallback={deleteProjectCallback} addTask={addTask} deleteTask={deleteTask} editTask={editTask}/> )\n    }\n\n    return(\n        <>\n            {(projects[0]) ? null : <Loader active>Loading</Loader>}\n\n            <div className=\"ui grid container\">\n                <div className=\"eight wide column\" >\n\n                    <Input className=\"large\" placeholder=\"Search\" onChange={e => handleSearchProject(e)}/>\n                    \n                    <br></br>\n                    <br></br>\n\n                    <ProjectInput createNewProject={createNewProject}/>\n                    \n                </div>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <Grid stackable container columns={2} >\n\n                {renderProjects()}\n                \n            </Grid>\n\n\n            <br></br>\n            <br></br>\n\n\n\n        </>\n    )\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         projects: state.projects,\n//         tasks: state.tasks,\n//         people: state.people\n//     }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         saveProject: (project) => dispatch(saveProject(project)), // this changed from the local redux store to the redux thunk backend connection\n//         deleteProject: (id) => dispatch(deleteProject(id)),\n//         editProject: project => dispatch(editProject(project)),\n//         addTask: project_id => dispatch(addTask(project_id)),\n//         deleteTask: id => dispatch(deleteTask(id)),\n//         editTask: task => dispatch(editTask(task)),\n//     }\n// }\n\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Projects);\n\nexport default Projects;","import React, {useState} from 'react';\nimport { Card, Grid } from 'semantic-ui-react'\n\nimport { Link } from 'react-router-dom';\n\nimport TasksModal from '../tasks/TasksModal';\n\n\n\nconst Person = (props) => {\n\n    const [showTasksModal, setShowTasksModal] = useState(false)\n    const [projectId, setProjectId] = useState(null)\n\n\n\n    const handleShowTasksModal = (e) => {\n        setProjectId(e.target.id)\n        setShowTasksModal(true)\n        }\n  \n    const handleHideTasksModal = () => {\n        setShowTasksModal(false)\n      }\n\n    \n    const myTasks= props.tasks.filter(task => task.person_id === props.id) // filter out the tasks that don't belong to the person\n    let project;\n    myTasks.map((task) => { return project = props.projects.find(project => project.id === task.project_id )})\n\n    const renderTasks = () => {\n        const myTasks= props.tasks.filter(task => task.person_id === props.id) // filter out the tasks that don't belong to the person\n        let project;\n        const list = myTasks.map((task) => {\n                        project = props.projects.find(project => project.id === task.project_id )\n                        return <li key={task.id} > <a id={project.id} onClick={(e) => handleShowTasksModal(e)}> {project.title} Project</a>: {task.description}  {task.completed ? <p>(Completed)</p> : <p>(InProgress)</p>}   </li>\n                    })\n        return <ul>{list}</ul>\n    }\n\n    return(\n        <>\n        {showTasksModal ? <TasksModal handleHideTasksModal={handleHideTasksModal} project_id={projectId} /> : null}\n\n                <Grid.Column>\n                    <Card\n                    image={props.image}\n                    header={props.username}\n                    description={renderTasks}\n                    />\n                </Grid.Column>\n\n        </>\n    )\n    \n}\n\nexport default Person;","import React from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nimport Person from '../components/people/Person'\n\n// import { editProject } from '../actions/projectActions' //async actions imported from the actions file\n// import { addTask, deleteTask, editTask } from '../actions/tasksActions';\n\nimport { Grid, Loader } from 'semantic-ui-react'\n\n\nfunction People(){\n\n    const people = useSelector(state => state.people)\n    const projects = useSelector(state => state.projects)\n    const tasks = useSelector(state => state.tasks)\n\n    const renderPeople = () => {\n        return people.map(person => <Person key={person.id} id={person.id} username={person.username} image={person.image} tasks={tasks} projects={projects}></Person>)\n    }\n\n\n\n    return (\n            <>\n\n                <Grid stackable container columns={2} >\n                {(people[0]) ? null : <Loader active>Loading</Loader>}\n                \n                {renderPeople()}\n                </Grid>\n\n            </>\n    )\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         people: state.people,\n//         tasks: state.tasks,\n//         projects: state.projects\n//     }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//     return{\n//         addPerson: person => dispatch({type: 'ADD_PERSON', person}),\n//         editProject: project => dispatch(editProject(project)),\n//         addTask: project_id => dispatch(addTask(project_id)),\n//         deleteTask: id => dispatch(deleteTask(id)),\n//         editTask: task => dispatch(editTask(task))\n//     }\n// }\n\nexport default People;","import { URL } from '../index.js'\n// const URL ='https://secure-shelf-48338.herokuapp.com/'\n// const URL ='http://localhost:3001'\n\nexport function fetchPeople(){\n    return (dispatch) => {\n            fetch(`${URL}/people`)\n                .then(response => {return response.json()})\n                .then(people => {\n                    // console.log(people)\n\n                    dispatch({type: 'LOAD_PEOPLE', people}) // Have to access the data structure from the rails API correctly\n                })\n                .catch(error => console.log(error.message))\n    }\n}\n\nexport const createUser = user => {\n    return dispatch => {\n      return fetch(`${URL}/people`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({user})\n      })\n        .then(resp => resp.json())\n        .then((person) => {\n          const newPerson = person.data.attributes\n          dispatch({type: \"ADD_PERSON\", newPerson})\n        })\n\n    }\n  }\n\n  export const loginUser = user => {\n    return dispatch => {\n      return fetch(`${URL}/auth`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({user})\n      })\n        .then(resp => resp.json())\n        // .then(data => {\n        //   console.log(data)\n        //   if (data.message) {\n        //     console.log(data.message)\n        //     // Here you should have logic to handle invalid creation of a user.\n        //     // This assumes your Rails API will return a JSON object with a key of\n        //     // 'message' if there is an error with creating the user, i.e. invalid username\n        //   } else {\n        //     // localStorage.setItem(\"token\", data.token)\n        //     // dispatch({type: 'LOGIN_USER', userObj: data.payload})\n        //   }\n        // })\n    }\n  }\n\n  export function deletePerson(id){\n    const configObj = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      };\n    return (dispatch) => {\n        fetch(`${URL}/people/${id}`, configObj)\n            .then(response => {return response.json()})\n            .then(() => {\n                dispatch({type: 'DELETE_PERSON', id})\n            })\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Form, Grid, Message } from 'semantic-ui-react';\nimport {createUser} from '../../actions/peopleActions';\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showSucces: false,\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    return this.props.createUser({username: this.state.username, password: this.state.password}) ? this.setState({showSucces: true}) : this.setState({error: true}) \n  }\n\n  renderForm = () => {\n    if (!this.state.showSucces){\n      return (<Form onSubmit={this.handleSubmit}>\n                    <h1>Sign Up For An Account</h1>\n\n                    <label>Username</label>\n                    <Form.Input\n                    name='username'\n                    placeholder='Username'\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    /><br/>\n\n                    <label>Password</label>\n                    <Form.Input\n                    type='password'\n                    name='password'\n                    placeholder='Password'\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    /><br/>\n                    <br/>\n\n                    <input type='submit'/>\n            </Form>)\n    } else {\n      return <Message success>User Successfully created</Message>\n    }\n  }\n\n  render() {\n    return (\n        <Grid stackable container columns={1} >\n            <Grid.Column>\n                {this.renderForm()}\n            </Grid.Column>\n      </Grid>\n\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createUser: user => dispatch(createUser(user))\n})\n\nexport default connect(null, mapDispatchToProps)(Signup);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Form, Grid, Message } from 'semantic-ui-react';\nimport {loginUser} from '../../actions/peopleActions';\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.loginUser(this.state).then((auth) => {\n      if(auth.error) {\n        // console.log(auth.error)\n        this.setState({error: true})\n      } else {\n        this.props.handleLogin(auth)\n        this.props.history.push('/profile')\n      }\n    })\n  }\n\n  render() {\n    return (\n        <Grid stackable container columns={1} >\n\n            <Grid.Column>\n                <Form onSubmit={this.handleSubmit} error >\n                    <h1>Login into your account</h1>\n\n                    <label>Username</label>\n                    <Form.Input\n                    name='username'\n                    placeholder='Username'\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    />\n                    <br/>\n\n                    <label>Password</label>\n                    <Form.Input\n                    type='password'\n                    name='password'\n                    placeholder='Password'\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    /><br/>\n                    {this.state.error ? <Message error content=\"Wrong username or password\"/> : null}\n\n                    <br/>\n\n                    <input type='submit'/>\n            </Form>\n        </Grid.Column>\n      </Grid>\n\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser: user => dispatch(loginUser(user))\n})\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, { useState} from 'react';\nimport { Card, Grid, Button, Loader } from 'semantic-ui-react'\n\n\n\n\nimport TasksModal from '../tasks/TasksModal';\nimport { useSelector } from 'react-redux';\n\n\n\nconst Profile = (props) => {\n\n    // state = {\n    //     showTasksModal: false,\n\n    // }\n\n    const [showTasksModal, setShowTasksModal] = useState(false)\n    const [projectId, setProjectId] = useState(null)\n\n    const people = useSelector(state => state.people)\n    const projects = useSelector(state => state.projects)\n    const tasks = useSelector(state => state.tasks)\n\n    const handleShowTasksModal = (e) => {\n        setProjectId(e.target.id)\n        setShowTasksModal(true)\n      }\n  \n    const handleHideTasksModal = () => {\n        setShowTasksModal(false)\n      }\n\n    const handleDeletePerson = (e) => {\n        // console.log(e.target.id)\n        props.deletePersonCallback(e.target.id)\n        // localStorage.removeItem(\"token\");\n        props.handleLogout()\n        props.history.push('/signup')\n    }\n\n\n    const renderTasks = () => {\n        const myTasks= tasks.filter(task => task.person_id === props.currentUser.id) //still send current user as a prop\n        // console.log(myTasks)\n        let project;\n        const list = myTasks.map((task) => {\n                        project = projects.find(project => project.id === task.project_id )\n                        return (\n                            <li key={task.id}> \n                                <a onClick={e => handleShowTasksModal(e)} id={project.id}>{project.title} Project</a>: {task.description}  {task.completed ? <p>(Completed)</p> : <p>(InProgress)</p>}\n                            </li>\n                            \n                        )\n                    })\n        return <><ul>{list}</ul></>\n\n    }\n    \n    const person = people.find(person => person.username === props.currentUser.username) // find person that logged in\n\n    return (\n        <div>\n            {(tasks[0]) ? null : <Loader active>Loading</Loader>}\n            {showTasksModal ? <TasksModal handleHideTasksModal={handleHideTasksModal} project_id={projectId} /> : null}\n            <Grid stackable container columns={2} >\n\n                <Grid.Column>\n                    <Card\n                    image={person.image}\n                    header={person.username}\n                    />\n                    <Button id={person.id} onClick={e => handleDeletePerson(e)}>Delete my Account</Button>\n                </Grid.Column>\n                <Grid.Column>\n\n                    <Card\n                    header={\"Todos:\"}\n                    description={renderTasks}\n                    />\n                </Grid.Column>\n\n            </Grid>\n\n        </div>\n        \n        )\n        \n}\n\nexport default Profile;","import React, { useEffect, useState } from 'react';\nimport {\n  HashRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport NavBar from './components/NavBar';\nimport SideBar from './components/Sidebar';\n\nimport Projects from './containers/Projects';\n// import Profile from './components/Profile';\n// import Tasks from './containers/Tasks';\nimport People from './containers/People';\n\nimport {fetchProjects} from './actions/projectActions'\nimport {deletePerson, fetchPeople, loginUser} from './actions/peopleActions'\nimport {fetchTasks} from './actions/tasksActions'\n\nimport Signup from './components/people/Signup';\nimport Login from './components/people/Login';\nimport Profile from './components/people/Profile';\n\n\n\n\n\n\nconst App = () => {\n  const [state, setState] = useState({ auth: { currentUser: {} }, loggedIn: false, loading: true })\n  // state = { auth: { currentUser: {} }, showTasksModal: false, loggedIn: false, loading: true };\n\n  const dispatch = useDispatch()\n\n  const props = useSelector(state => state)\n\n  useEffect( \n    () => {\n      dispatch(fetchProjects())\n      dispatch(fetchPeople())\n      dispatch(fetchTasks())\n\n\n      const token = localStorage.getItem(\"token\");\n      \n      if (token) {\n        dispatch(loginUser()).then((user) => {\n          const currentUser = { currentUser: user };\n\n          setState({...state,  auth: currentUser });\n        });\n      }\n    }, []\n  )\n\n  const handleLogin = (user) => {\n    const currentUser = { currentUser: user };\n    // localStorage.setItem(\"token\", user.token);\n\n    setState({ ...state, auth: currentUser, loggedIn: true });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setState({...state, auth: { currentUser: {} }, loggedIn: false });\n  };\n\n  const deletePersonCallback = (id) => {\n    dispatch(deletePerson(id))\n  }\n\n  \n    return (\n      <>\n        <Router >\n          <div className=\"flexbox\">\n\n              <SideBar/>\n\n              <div className=\"main\">\n\n                <NavBar currentUser={state.auth.currentUser} handleLogout={handleLogout} loggedIn={state.loggedIn}/> \n              {/* send the current user and loggedin state to navbar to show or hide navbar buttons */}\n                <div className=\"ui container\">\n\n                      <Route exact path=\"/\" render={(routerProps) => {\n                        return (\n                          state.loggedIn ?  <Profile {...routerProps} people={props.people} tasks={props.tasks} projects={props.projects} deletePerson={props.deletePerson}currentUser={state.auth.currentUser}editProject={props.editProject} addTask={props.addTask} deleteTask={props.deleteTask} editTask={props.editTask}/> : <Login {...routerProps} handleLogin={handleLogin} />\n                        );\n                      }}/>\n\n                      <Route exact path=\"/projects\" \n                       render={routerProps => {\n                         return (\n                       <Projects {...routerProps}/>)\n                      }}/> \n                  \n\n                      <Route exact path={`/people`}>\n                        <People />\n                      </Route>\n\n                      <Route exact path={`/signup`}\n                       render={(routerProps) => {\n                        return (\n                          <Signup {...routerProps} />\n                        );\n                      }}/>\n\n                      <Route exact path={`/login`} \n                       render={(routerProps) => {\n                        return (\n                          <Login {...routerProps} handleLogin={handleLogin} />\n                        );\n                      }}/>\n\n                      <Route exact path={`/profile`} \n                       render={(routerProps) => {\n                          if(state.loggedIn){\n                            return (                        \n                              <Profile {...routerProps} \n                              // people={props.people}\n                              // tasks={props.tasks}\n                              // projects={props.projects}\n                              deletePersonCallback={deletePersonCallback}\n                              currentUser={state.auth.currentUser}\n                              editProject={props.editProject} \n                              addTask={props.addTask} \n                              deleteTask={props.deleteTask} \n                              editTask={props.editTask}\n                              handleLogout={handleLogout}\n                              />\n                            )\n                          } else{\n                            return (\n                              <Login {...routerProps} handleLogin={handleLogin} />\n                              )\n                          }\n                      }}/>\n\n\n                      \n                    {/* </Switch>  */}\n                </div>                                            \n              </div>\n          </div> \n        </Router>\n      </>\n    );\n}\n\n// const mapStateToProps = state => {\n//   return{\n//     projects: state.projects,\n//     people: state.people,\n//     tasks: state.tasks\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       fetchProjects: () => dispatch(fetchProjects()),\n//       fetchPeople: () => dispatch(fetchPeople()),\n//       fetchTasks: () => dispatch(fetchTasks()),\n//       loginUser: () => dispatch(loginUser()),\n//       deletePerson: (id) => dispatch(deletePerson(id)),\n//       editProject: project => dispatch(editProject(project)),\n//       addTask: project_id => dispatch(addTask(project_id)),\n//       deleteTask: id => dispatch(deleteTask(id)),\n//       editTask: task => dispatch(editTask(task))\n//   }\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore,  applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/index';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const composeEnhancers = composeWithDevTools();\n\n// use context for local and global state\n// https://www.freecodecamp.org/news/how-to-use-redux-in-your-react-typescript-app/ \n//merge to typescript\n\n// https://www.freecodecamp.org/news/how-to-integrate-react-hooks-into-your-project-without-changing-your-redux-code-974e6f70f0b0/ \n// refactor to use react hooks\n\n// https://dev.to/jamland/react-context-hooks-vs-redux-hooks-3g91\n// newer redux hooks useSelector\n\nexport const store = createStore(reducer, \n  applyMiddleware(thunk)\n  );\n// console.log(store.getState())\n\nexport const URL = 'https://secure-shelf-48338.herokuapp.com/'\n// export const URL ='http://localhost:3001'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    {/* {console.log(store)} */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}