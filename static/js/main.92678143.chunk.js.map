{"version":3,"sources":["reducers/projects.js","reducers/index.js","reducers/tasks.js","reducers/people.js","components/SideBar.js","components/NavBar.js","components/projects/ProjectInput.js","components/projects/ProjectCard.js","containers/Projects.js","actions/projectActions.js","components/Profile.js","components/tasks/Task.js","components/tasks/TasksModal.js","containers/Tasks.js","components/people/Person.js","containers/People.js","App.js","serviceWorker.js","index.js"],"names":["date","cuid","Date","started","getMonth","getDate","getFullYear","combineReducers","projects","state","title","description","id","action","type","project","filter","projectIndex","findIndex","slice","console","log","tasks","projectId","peopleId","completed","task","concat","taskIndex","people","key","value","text","image","avatar","src","person","name","SideBar","className","to","aria-hidden","Component","NavBar","ProjectInput","showModal","handleOnChange","event","setState","target","handleOnSubmit","preventDefault","props","addProject","openModal","closeModal","renderForm","this","ProjectCard","open","edit","handleDeleteClick","handleCancel","handleConfirm","deleteProject","Button","basic","icon","onClick","Confirm","onCancel","onConfirm","Projects","showForm","renderProjects","map","editProject","renderModal","componentDidMount","fetchProjects","connect","dispatch","fetch","then","response","json","catch","error","message","Profile","Header","as","textAlign","Content","Icon","circular","Task","makeCompleted","makeInProgress","handleSave","editTask","handleDelete","deleteTask","assignTo","e","innerText","renderInProgress","Input","size","labelPosition","placeholder","TextArea","onChange","rows","cols","Dropdown","selection","options","renderCompleted","Label","color","alt","Detail","Form","TasksModal","index","startEdit","cancelEdit","saveEdit","renderEdit","Modal","Description","renderTasks","renderDescription","Grid","columns","Row","Column","secondary","content","history","goBack","handleAddTask","addTask","dimmer","scrolling","Image","wrapped","Divider","horizontal","withRouter","Tasks","match","params","Person","myTasks","Card","header","meta","People","renderPeople","addPerson","App","exact","path","render","routerProps","Boolean","window","location","hostname","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92678143.chunk.js","sourcesContent":["import cuid from 'cuid';\nexport const cuidFn = cuid;\nlet date = new Date()\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nlet started = `Started ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\n\n\nexport default function projects(\n    state = [{\n        title: 'React-Redux',\n        started: started,\n        description: 'Apply Redux Thunk for async connection to backend',\n        id: '1'\n    }, {\n        title: 'JavaScript-Rails', \n        started: started,\n        description: 'Build with project requirements',\n        id: '2'\n    }, {\n        title: 'Ruby on Rails', \n        started: started,\n        description: 'Build with project requirements',\n        id: '3'\n    }, {\n        title: 'Sinatra', \n        started: started,\n        description: 'Build with project requirements',\n        id: '4'\n    }]\n    ,\n    action){\n        switch(action.type){\n            case 'ADD_PROJECT':\n                const project = {\n                    title: action.project.title,\n                    started: started,\n                    description: action.project.description,\n                    id: cuid()\n                }\n                return [...state, project]\n                \n            case 'DELETE_PROJECT':\n                return{\n                    ...state, projects: [...state.projects.filter(project => project.id !== action.id)]\n                }\n            case 'EDIT_PROJECT':\n                let projectIndex = state.projects.findIndex(project => project.id === action.project.id)\n                return{\n                    ...state, projects: [...state.projects.slice(0, projectIndex), action.project, ...state.projects.slice(projectIndex + 1)]\n                }\n            case 'LOAD_PROJECTS':\n                console.log(action.projects)\n                return state\n            default:\n                return state\n        }\n\n}\n\n\n\n\n\n","import { combineReducers } from 'redux'\nimport projects from './projects'\nimport tasks from './tasks'\nimport people from './people'\n\nexport default combineReducers({\n    projects,\n    tasks,\n    people\n})","import cuid from 'cuid';\n\n\nexport default function tasks(state = [{ \n    description: \"Apply Redux Thunk for async connection to backend\",\n    id: '1',\n    projectId: '1', \n    peopleId: 'Jenny Hess', \n    completed: true\n},{ \n    description: \"Add difficulty attribute, and other dashboard widgets\", \n    id: '2',\n    projectId: '1', \n    peopleId: 'Elliot Fu', \n    completed: false\n},{ \n    description: \"I dont belong in project 1\",\n    id: '3',\n    projectId: '2', \n    peopleId: '3', \n    completed: false\n}], action){\n    switch(action.type){\n        case 'ADD_TASK':\n                // console.log(state.tasks)\n                const task = {\n                    description: \"New task...\",\n                    id: cuid(),\n                    projectId: action.projectId,\n                    peopleId: 'Someone', \n                    completed: false\n                }\n                // console.log(task)\n                return[\n                    ...state.concat(task)\n                ]\n            case 'DELETE_TASK':\n                return{\n                    ...state, tasks: [...state.tasks.filter(task => task.id !== action.id)]\n                }\n            case 'EDIT_TASK':\n                let taskIndex = state.findIndex(task => task.id === action.task.id)\n                console.log(action.task)\n                return[...state.slice(0, taskIndex), action.task, ...state.slice(taskIndex + 1)]\n            default:\n                return state;\n    }\n}\n\n","export default function people(state = [\n    {\n      key: 'Jenny Hess',\n      value: 'Jenny Hess',\n      text: 'Jenny Hess',\n\n      id: '1',\n      image: { avatar: true, src: 'https://api.adorable.io/avatars/77' },\n    },\n    {\n      key: 'Elliot Fu',\n      value: 'Elliot Fu',\n      text: 'Elliot Fu',\n      id: '2',\n      image: { avatar: true, src: 'https://api.adorable.io/avatars/78' },\n    },\n    {\n      key: 'Stevie Feliciano',\n      value: 'Stevie Feliciano',\n      text: 'Stevie Feliciano',\n      id: '3',\n      image: { avatar: true, src: 'https://api.adorable.io/avatars/79' },\n    },\n    {\n      key: 'Christian',\n      value: 'Christian',\n      text: 'Christian',\n      id: '4',\n      image: { avatar: true, src: 'https://api.adorable.io/avatars/80' },\n    }\n  ], action){\n    switch(action.type){\n        case 'ADD_PEOPLE':\n                const person = {\n                        name: 'Santi',\n                        id: '1',\n                        image: { avatar: true, src: 'https://api.adorable.io/avatars/70' },\n                }\n                return [...state, person]\n        default:\n            return state\n    }\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../App.css\";\n\n\n\nexport default class SideBar extends Component{\n    render(){\n        return(\n        <div className=\"sidebar\">\n            <div className=\"ui left vertical inverted icon visible sidebar menu\">\n                <Link to=\"/\" className=\"item\">\n                        <i aria-hidden=\"true\" className=\"home icon\"></i>\n                        Home\n                </Link>\n                <Link to=\"/projects\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"sitemap icon\"></i>\n                        Projects\n                </Link>\n                <Link to=\"/people\" className=\"item\" >\n                        <i aria-hidden=\"true\" className=\"users icon\"></i>\n                        People\n                </Link>\n            </div>\n        </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class NavBar extends Component{\n    render(){\n        return(\n            <div className=\"ui stackable menu\">\n                <div className=\"header item\">\n                    Projects Dashboard\n                </div>\n                    <Link to=\"/login\" className=\"ui item\">Login</Link>\n                    <Link to=\"/signup\" className=\"ui item\" >Signup</Link>\n                    <Link to=\"/profile\" className=\"ui item\" >Profile</Link>\n                    <Link to=\"/logout\" className=\"ui item right\"> Logout </Link>\n\n            </div>\n            \n        )\n    }\n}","import React, {Component} from 'react';\n// import ProjectCard from './ProjectCard';\nimport { Button, Header, Image, Modal, Form } from 'semantic-ui-react'\n\n\n\nexport default class ProjectInput extends Component{\n    state = {\n        title: '',\n        description: '',\n        showModal: false\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault()\n        this.props.addProject(this.state)\n        this.setState({\n            title: '',\n            description: '',\n            showModal: false\n        })\n    }\n\n    openModal = () => {\n        this.setState({\n            showModal: true\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            showModal: false\n        })\n    }\n\n\n\n    renderForm = () => {\n        return (\n            // <form onSubmit={(event) => this.handleOnSubmit(event)}>\n            //     <input type=\"text\" onChange={event => this.handleOnChange(event)} value={this.state.title}/>\n            //     <input type=\"submit\"/>\n            // </form>\n            <>\n            <Button onClick={this.openModal}> <i className=\"add icon center\"></i></Button>\n            <Modal dimmer={\"inverted\"} open={this.state.showModal} >\n                <Modal.Header>Add a project</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' />\n                    <Modal.Description>\n                        <Form>\n                        <Header>Title:</Header>\n                                <Form.Input type=\"text\" onChange={event => this.handleOnChange(event)} value={this.state.title} name=\"title\" placeholder={this.state.title}/>\n                        <Header>Description:</Header>\n                                <Form.TextArea type=\"textarea\" onChange={event => this.handleOnChange(event)} value={this.state.description} name=\"description\" placeholder={this.state.description}/>\n                                <Form.Button onClick={(event) => this.handleOnSubmit(event)} type=\"submit\" >Submit</Form.Button>\n                                <Form.Button onClick={this.closeModal} type=\"submit\" >Cancel</Form.Button>\n                        </Form>\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n\n\n            </>\n        )\n    }\n    render(){\n        return(\n            <>\n            {/* {this.state.showForm ? this.renderForm() : <Button onClick={this.showForm}> Add project </Button>}   */}\n            {this.renderForm()}\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Button, Confirm } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\n// modal is to display tasks\n\nexport default class ProjectCard extends Component{\n    state = {\n      open: false,\n      edit: false\n    }\n\n    handleDeleteClick = (event) => {\n      this.setState({\n        open: true\n      })\n    }\n\n    handleCancel = () => {\n      this.setState({\n        open: false\n      })\n    }\n\n    handleConfirm = () => {\n      this.props.deleteProject(this.props.id)\n      this.setState({\n        open: false\n      })\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"eight wide column\" >\n\n            <div className=\"ui card\">\n              <div className=\"image\">\n                <i aria-hidden=\"true\" className=\"file alternate icon left\"></i>\n              </div>\n              <div className=\"content\">\n                  {/* <input value={this.props.title}/> */}\n                      <Link className=\"header\" to={`/projects/${this.props.id}`}>{this.props.title}</Link> \n                      {/* this link nests deeper with every click */}\n                  <div className=\"meta\">\n                    <span className=\"date\">{this.props.started}</span>\n                  </div>\n                  <div className=\"description\">\n                    {this.props.description}\n                  </div>\n                  <div className=\"ui right aligned grid\">\n              \n                  <div className=\"sixteen wide column\">\n                                   \n                  </div>\n                  </div>\n              </div>\n              <div className=\"extra content\">\n                <div className=\"left floated right aligned six wide column\">\n                        \n                        <Link className=\"header\" to={`/projects/${this.props.id}`}>\n                          <Button basic icon='pencil'/>\n                        </Link> \n                        <Button basic icon='trash' onClick={event => this.handleDeleteClick(event)}>\n                        {/* <i aria-hidden=\"true\" className=\"trash alternate icon right\"></i> */}\n                      </Button>\n                      <Confirm\n                        open={this.state.open}\n                        onCancel={this.handleCancel}\n                        onConfirm={this.handleConfirm}\n                      />        \n                  </div>\n                \n              </div>\n            </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css'\nimport {fetchProjects} from '../actions/projectActions'\n\n// import { Route } from \"react-router-dom\";\n// import {   useRouteMatch } from 'react-router-dom';\n\n\n\nimport ProjectInput from '../components/projects/ProjectInput';\nimport ProjectCard from '../components/projects/ProjectCard';\n\n\n\n\n// content changes here with router\n// need Many of these\n// will become a container component\n\nclass Projects extends Component{\n\n    state = {\n        showForm: false\n    }\n\n    renderProjects = () => {\n        // console.log(this.props.match.url)\n        return this.props.projects.map( project => <ProjectCard key={project.id} title={project.title} started={project.started} description={project.description} id={project.id} editProject={this.props.editProject} deleteProject={this.props.deleteProject}/> )\n     \n    }\n\n    renderModal = () => {\n        this.setState({\n            showForm: true\n        })\n    }\n\n    componentDidMount = () => {\n        this.props.fetchProjects()\n    }\n\n    render(){\n        return(\n            <>\n                    <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <ProjectInput addProject={this.props.addProject}/>\n                        </div>\n                    </div>\n\n                    <br></br>\n                    <br></br>\n\n                    <div className=\"ui grid container\">\n                        {/* <ProjectsList projects={this.props.projects} editProject={this.props.editProject} deleteProject={this.props.deleteProject}/> */}\n                        {this.renderProjects()}\n\n                    </div>\n\n\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        projects: state.projects\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addProject: (project) => dispatch({type: 'ADD_PROJECT', project}),\n        deleteProject: (id) => dispatch({type: 'DELETE_PROJECT', id}),\n        fetchProjects: () => dispatch(fetchProjects())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","\nexport function fetchProjects(){\n    return (dispatch) => {\n        dispatch({type: 'LOADING_PROJECTS'})\n            fetch('https://secure-shelf-48338.herokuapp.com/projects')\n                .then(response => {return response.json()})\n                .then(projects => {\n                    console.log(projects)\n                    dispatch({type: 'LOAD_PROJECTS', projects})\n                })\n                .catch(error => console.log(error.message))\n    }\n}","import React, {Component} from 'react';\nimport { Header, Icon} from 'semantic-ui-react'\n\n\nexport default class Profile extends Component{\n    render(){\n        return(\n            <>\n                <Header as='h2' icon textAlign='center'>\n                    <i aria-hidden=\"true\" className=\"users icon left\"></i>\n                    <Header.Content>Projects</Header.Content>\n                </Header>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='settings' circular />\n                    <Header.Content>Tasks</Header.Content>\n                </Header>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='plug' circular />\n                    <Header.Content>Processes</Header.Content>\n                </Header>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Input, Dropdown, Label, TextArea, Button, Form } from 'semantic-ui-react';\n\n\nclass Task extends Component{\n\n    state = {\n        description: this.props.description,\n        id: this.props.id,\n        projectId: this.props.projectId,\n        completed: this.props.completed,\n        peopleId: this.props.peopleId\n    }\n\n    makeCompleted = () => {\n        this.setState({\n            completed: true\n        })\n    }\n\n    makeInProgress = () => {\n        this.setState({\n            completed: false\n        })\n    }\n\n    handleSave = () => {\n        this.props.editTask(this.state)\n    }\n\n    handleDelete = () => {\n        this.props.deleteTask(this.props.id)\n    }\n\n    assignTo = (e) => {\n        this.setState({\n            peopleId: e.target.innerText // use onchange for dropdowns/select and innertext instead of value\n        })\n    }\n    \n    renderInProgress = () => {\n        return (\n            <>\n            <br></br>\n\n\n                <Input  size=\"small\" labelPosition='right' type='text' value={this.state.description} placeholder={this.state.description}>\n\n                <TextArea onChange={event => this.setState({description: event.target.value})} value={this.state.description} rows=\"4\" cols=\"70\"/>\n                <Button onClick={this.handleSave} icon=\"save\"></Button>\n                <Button onClick={this.makeCompleted} icon=\"check circle\"></Button>\n                <Button onClick={this.handleDelete} icon=\"trash\"></Button>\n\n                </Input>\n            <br></br>\n\n                Assigned to: <Dropdown value={this.state.peopleId} onChange={e => this.assignTo(e)}  selection options={this.props.people} />\n            <br></br>\n\n            <br></br>\n            <br></br>\n            <br></br>\n            </>\n\n        )\n    }\n    \n    renderCompleted = () => {\n        return (\n            <>\n            <br></br>\n            <Label color='green' image>\n            <img alt=\"Profile Pic\" src='https://api.adorable.io/avatars/77/stevie@adorable.io.png' />\n                completed by {this.state.peopleId}\n            <Label.Detail>{this.props.description}</Label.Detail>\n\n            </Label>\n            <Button onClick={this.handleSave} icon=\"save\"></Button>\n            <Button onClick={this.makeInProgress} icon=\"redo\"></Button>   \n            <Button onClick={this.handleDelete} icon=\"trash\"></Button>\n\n            <br></br>\n            </>\n        )     \n     }\n    \n    render(){\n        return (\n            <>\n            <Form> \n            {this.state.completed ? this.renderCompleted() : this.renderInProgress()}\n            </Form>\n            {/* {console.log(this.state)} */}\n            </>\n        )\n    }\n}\n\nexport default Task\n\n\n","import React, {Component} from 'react';\nimport { Header, Image, Modal, Form, Button, Divider, Grid } from 'semantic-ui-react'\nimport {withRouter} from 'react-router-dom';\nimport Task from './Task'\n\n\nclass TasksModal extends Component{\n    // let index = this.props.projects.findIndex( project => project.id === this.props.match.params.id)\n    state = {\n        title: this.props.projects[this.props.index].title,\n        started: this.props.projects[this.props.index].started,\n        description: this.props.projects[this.props.index].description,\n        id: this.props.projects[this.props.index].id,\n        edit: false\n    }\n    \n\n\n    startEdit = () => {\n        this.setState({\n            edit: true\n        })\n    }\n\n    cancelEdit = () => {\n        this.setState({\n            edit: false\n        })\n    }\n\n    saveEdit = (event) => {\n        event.preventDefault()\n        this.props.editProject({\n            title: this.state.title,\n            started: this.state.started,\n            id: this.state.id,\n            description: this.state.description\n        })\n        this.setState({\n            edit: false\n        })\n        // console.log(this.props.projects)\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    renderEdit = () => {\n        return (\n            <Modal.Description>\n                <Form>\n                        <Form.Input type=\"text\" onChange={event => this.handleOnChange(event)} value={this.state.title} name=\"title\" placeholder={this.state.title}/>\n                        <Form.TextArea type=\"textarea\" onChange={event => this.handleOnChange(event)} value={this.state.description} name=\"description\" placeholder={this.state.description}/>\n                        <Button icon=\"save\" onClick={(event) => this.saveEdit(event)}></Button>\n                        <Button icon=\"close icon\" onClick={this.cancelEdit}></Button>\n                </Form>\n            </Modal.Description>\n        )\n    }\n\n    renderTasks = () => {// filter tasks for this project only\n        const projectTasks = this.props.tasks.filter(task => task.projectId === this.state.id)\n        return projectTasks.map(task => <Task key={task.id} people={this.props.people} peopleId={task.peopleId} deleteTask={this.props.deleteTask} projectId={this.state.id} editTask={this.props.editTask} id={task.id} description={task.description} completed={task.completed}/>)\n    }\n\n\n    renderDescription = () => {\n        return (\n            <>\n                <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                    <Button basic secondary content=\"Edit Project\" labelPosition='right' icon=\"pencil\" onClick={e => this.startEdit(e)} ></Button>                               \n                    </Grid.Column>\n                    <Grid.Column>\n                    </Grid.Column>\n                    <Grid.Column>\n                    <Button basic content=\"Exit Project Page\"  onClick={this.props.history.goBack} secondary ></Button>\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid> \n                <Header>{this.state.title}</Header>\n                <p>{this.state.description}</p>\n\n                      \n            </>          \n        )\n    }\n\n    handleAddTask = () => {\n        this.props.addTask(this.state.id)\n        // console.log(this.state.id)\n    }\n\n    render(){\n        return( \n            <>\n            <div className=\"ui grid container\">\n                        <div className=\"eight wide column\" >\n                            <Modal size={\"large\"}dimmer={\"inverted\"} open={true} >\n                                <Modal.Header></Modal.Header>\n                                    <Modal.Content image scrolling>\n                                    <Image size='medium' alt=\"Workbench and tools\" src='https://images.unsplash.com/photo-1416339158484-9637228cc908?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80' wrapped/>\n                                    <Modal.Description>\n                                    {this.state.edit ?  this.renderEdit() : this.renderDescription()}\n                                    <Divider horizontal>Tasks</Divider>\n                                    <Button basic secondary onClick={this.handleAddTask}>Add Task</Button>\n                                    <br></br>\n                                    {this.renderTasks()}\n                                    {/* {console.log(this.props.tasks.filter(task => task.projectId === this.state.id))} */}\n                                    \n                                    </Modal.Description>\n                                </Modal.Content>\n\n\n                            </Modal>\n                        </div>\n                    </div>\n                \n            </>\n        )\n}\n    \n  }\n\nexport default withRouter(TasksModal)","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css'\n\nimport TasksModal from '../components/tasks/TasksModal';\n\n\n// nested route for tasks needs to be here\n\nclass Tasks extends Component{\n\n    render(){\n        return (\n            <>\n            {console.log(this.props)}\n            <TasksModal tasks={this.props.tasks} people={this.props.people}  match={this.props.match} index={this.props.projects.findIndex( project => project.id === this.props.match.params.id)} editProject={this.props.editProject} addTask={this.props.addTask} deleteTask={this.props.deleteTask} editTask={this.props.editTask} projects={this.props.projects}/>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        tasks: state.tasks,\n        projects: state.projects,\n        people: state.people\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addTask: projectId => dispatch({type: 'ADD_TASK', projectId}),\n        deleteTask: id => dispatch({type: 'DELETE_TASK', id}),\n        editTask: task => dispatch({type: 'EDIT_TASK', task}),\n        editProject: (project) => dispatch({type: 'EDIT_PROJECT', project})\n\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Tasks)","import React, {Component} from 'react';\nimport { Card } from 'semantic-ui-react'\n\n\nexport default class Person extends Component{\n\n    render(){\n        const myTasks= this.props.tasks.filter(task => task.peopleId === this.props.name) // filter out the tasks that don't belong to the person\n        \n        return(\n            <div className=\"four wide column\" >\n                {/* {console.log(this.props.tasks)}  */}\n                {/* See if we are having access to the store and the tasks */}\n                {/* {console.log(myTasks)} */}\n                 <Card\n                    image={this.props.image.src}\n                    header={this.props.name}\n                    meta='Software Engineer'\n                    description={<ul>{myTasks.map(task => <li key={task.id}> {task.description} {task.completed ? <p>(Completed)</p> : <p>(InProgress)</p>}</li>)}</ul>}\n                />\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport Person from '../components/people/Person'\n\nclass People extends Component{\n\n    renderPeople = () => {\n        return this.props.people.map(person => <Person key={person.id} name={person.key} image={person.image} tasks={this.props.tasks}/>)\n    }\n    render(){\n        return (\n            <div className=\"ui grid container\">\n            {/* {console.log(this.props.people)} */}\n            {this.renderPeople()}\n         </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        people: state.people,\n        tasks: state.tasks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addPerson: person => dispatch({type: 'ADD_PERSON', person})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(People);","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SideBar from './components/SideBar';\nimport NavBar from './components/NavBar';\nimport Projects from './containers/Projects';\nimport Profile from './components/Profile';\nimport Tasks from './containers/Tasks';\nimport People from './containers/People';\n\n\n\n\n\nclass App extends Component{\n  \n  render(){\n    return (\n      <>\n        <Router>\n          <div className=\"flexbox\">\n              <SideBar/>\n\n              <div className=\"main\">\n              <NavBar/>\n\n\n                <div className=\"ui container\">\n\n                    {/* <Switch> */}\n                      <Route exact path=\"/\" render={()=> <Profile/>}>\n                      </Route>\n                      <Route exact path=\"/login\">\n                        <p>Login</p>\n                      </Route>\n\n                      <Route exact path=\"/projects\" render={routerProps => <Projects {...routerProps}/>}/> \n                      {/* I sent router props to have acces to match */}\n\n                      <Route exact path={`/projects/:id`} render={routerProps => <Tasks {...routerProps}/>} >\n                        {/* <Tasks/> */}\n                      </Route>\n\n                      <Route exact path={`/people`}>\n                        <People/>\n                      </Route>\n                      \n                    {/* </Switch>  */}\n                </div>                                            \n              </div>\n          </div> \n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore,  applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/index';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nexport const store = createStore(reducer,\n  applyMiddleware(thunk)\n  );\n// console.log(store.getState())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}